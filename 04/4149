import sys
f=lambda x,p:(x*x+1)%p
def power(a,b,p):
    if b<=1:return (a**b)%p
    t=power(a,b//2,p)
    if b%2:return (t*t*a)%p
    return (t*t)%p
def sosu(n,a):
    s,d=0,n-1
    while d%2==0:
        s+=1
        d//=2
    x=power(a,d,n)
    if x==1 or x+1==n:
        return True
    for i in range(s-1):
        x=power(x,2,n)
        if x+1==n or x==1:
            return True
    return False
prime_li=[2,3,5,7,11,13,17,19,23,29,31,37,41]
def isprime(n):
    check=0
    if n<=41:
        if n in prime_li:
            return True
        else:
            return False
    else:
        for i in prime_li:
            if sosu(n,i)==False:
                break
            else:
                check+=1
        if check==13:
            return True
        else:return False
def gcd(a,b):
    if a<b:
        a,b=b,a
    while b!=0:
        r=a%b
        a=b
        b=r
    return a
def pollrho(n,x):
    p=x
    if isprime(n):
        return n
    else:
        for i in prime_li:
            if n%i==0:
                return i
        y=x
        d=1
        while d==1:
            x=f(x,n)
            y=f(f(y,n),n)
            d=gcd(abs(x-y),n)
        if d==n:
            return pollrho(n,p+1)
        else:
            if isprime(d):
                return d
            else:
                return pollrho(d,2)
n=int(sys.stdin.readline())
li=[]
while n!=1:
    p=pollrho(n,2)
    li.append(int(p))
    n//=p
li.sort()
for i in li:
    print(i)
