import sys
input=sys.stdin.readline
def segment(start,end,ind):
    if start==end:
        tree[ind]=li[start]
        return tree[ind]
    mid=(start+end)//2
    tree[ind]=segment(start,mid,ind*2)+segment(mid+1,end,ind*2+1)
    return tree[ind]
def plus(start,end,ind,left,right):
    if left>end or right<start:return 0
    if left<=start and right>=end:return tree[ind]
    mid=(start+end)//2
    return plus(start,mid,ind*2,left,right)+plus(mid+1,end,ind*2+1,left,right)
def change(start,end,ind,value,place):
    if place<start or place>end:return
    if start<=place<=end:
        tree[ind]=tree[ind]+value
    if start==end:return
    mid=(start+end)//2
    change(start,mid,ind*2,value,place)
    change(mid+1,end,ind*2+1,value,place)
a,b=map(int,input().split())
li=list(map(int,input().split()))
l=1
while l<a:
    l<<=1
l<<=1
tree=[0]*l
segment(0,a-1,1)
for _ in range(b):
    q,w,e,r=map(int,input().split())
    if q>w:q,w=w,q
    print(plus(0,a-1,1,q-1,w-1))
    change(0,a-1,1,r-li[e-1],e-1)
    li[e-1]=r
