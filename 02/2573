from collections import deque
import sys
input=sys.stdin.readline
def graph(field):
    global a,b
    deq=deque()
    check=[[0 for _ in range(b)] for _ in range(a)]
    num=1
    for i in range(1,a-1):
        for j in range(1,b-1):
            if field[i][j]!=0:
                deq.append((i,j,num))
                num+=1
    if not deq:return -1
    dx=[1,-1,0,0]
    dy=[0,0,1,-1]
    while deq:
        x,y,num=deq.popleft()
        if check[x][y]!=0:
            check[x][y]=min(check[x][y],num)
            continue
        check[x][y]=num
        for i in range(4):
            x2=x+dx[i]
            y2=y+dy[i]
            if 0<=x2<a and 0<=y2<b and check[x2][y2]==0 and field[x2][y2]!=0:
                deq.appendleft((x2,y2,num))
    dic={}
    for i in range(a):
        for j in range(b):
            dic[check[i][j]]=dic.get(check[i][j],0)+1
    return len(dic)-1
a,b=map(int,input().split())
li=[list(map(int,input().split())) for _ in range(a)]
ans=0
while (g:=graph(li))<2:
    if g==-1:
        print(0)
        exit()
    t=[[0 for _ in range(b)] for _ in range(a)]
    for i in range(1,a-1):
        for j in range(1,b-1):
            count=0
            if li[i-1][j]==0:count+=1
            if li[i+1][j]==0:count+=1
            if li[i][j+1]==0:count+=1
            if li[i][j-1]==0:count+=1
            t[i][j]=max(0,li[i][j]-count)
    li=[i.copy() for i in t]
    ans+=1
print(ans)
