def th(n):
    f=lambda x,p:(x*x+1)%p
    def power(a,b,p):
        if b<=1:return (a**b)%p
        t=power(a,b//2,p)
        if b%2:return (t*t*a)%p
        return (t*t)%p
    def sosu(n,a):
        s,d=0,n-1
        while d%2==0:
            s+=1
            d//=2
        x=power(a,d,n)
        if x==1 or x+1==n:
            return True
        for i in range(s-1):
            x=power(x,2,n)
            if x+1==n:
                return True
        return False
    prime_li=[2,3,5,7,11,13,17,19,23,29,31,37,41]
    def isprime(n):
        check=0
        if n<=41:
            if n in prime_li:
                return True
            else:
                return False
        else:
            for i in prime_li:
                if sosu(n,i)==False:
                    break
                else:
                    check+=1
            if check==13:
                return True
            else:return False
    def gcd(a,b):
        if a<b:
            a,b=b,a
        while b!=0:
            r=a%b
            a=b
            b=r
        return a
    def pollrho(n,x):
        p=x
        if isprime(n):
            return n
        else:
            for i in prime_li:
                if n%i==0:
                    return i
            y=x
            d=1
            while d==1:
                x=f(x,n)
                y=f(f(y,n),n)
                d=gcd(abs(x-y),n)
            if d==n:
                return pollrho(n,p+1)
            else:
                if isprime(d):
                    return d
                else:
                    return pollrho(d,2)
    li=[]
    while n!=1:
        p=pollrho(n,2)
        li.append(int(p))
        n//=p
    li.sort()
    return li
a,b=map(int,input().split())
a-=1
b=th(b)
dic={}
for i in b:dic[i]=dic.get(i,0)+1
d={}
li=[]
l=len(dic.keys())
for i in range(1,a+1):
    t=th(a-i+1)
    for j in t:d[j]=d.get(j,0)+1
    t=th(i)
    for j in t:d[j]-=1
    num=0
    for x,y in dic.items():
        if d.get(x,0)>=y:
            num+=1
    if num==l:
        li.append(i)
print(len(li))
for i in li:print(i+1)
