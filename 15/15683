import sys
from collections import deque
def dfs(li,p):
    global m
    if p[0]==n:
        if p[-1]==1:
            t=[i.copy() for i in li]
            for i in range(p[2]+1,b):
                if t[p[1]][i]==6:break
                t[p[1]][i]=-1
            m=min(m,sum([k.count(0) for k in t]))
            t=[i.copy() for i in li]
            for i in range(p[2]-1,-1,-1):
                if t[p[1]][i]==6:break
                t[p[1]][i]=-1
            m=min(m,sum([k.count(0) for k in t]))
            t=[i.copy() for i in li]
            for i in range(p[1]+1,a):
                if t[i][p[2]]==6:break
                t[i][p[2]]=-1
            m=min(m,sum([k.count(0) for k in t]))
            t=[i.copy() for i in li]
            for i in range(p[1]-1,-1,-1):
                if t[i][p[2]]==6:break
                t[i][p[2]]=-1
            m=min(m,sum([k.count(0) for k in t]))
        elif p[-1]==2:
            t=[i.copy() for i in li]
            for i in range(p[1]-1,-1,-1):
                if t[i][p[2]]==6:break
                t[i][p[2]]=-1
            for i in range(p[1]+1,a):
                if t[i][p[2]]==6:break
                t[i][p[2]]=-1
            m=min(m,sum([k.count(0) for k in t]))
            t = [i.copy() for i in li]
            for i in range(p[2]+1,b):
                if t[p[1]][i]==6:break
                t[p[1]][i]=-1
            for i in range(p[2]-1,-1,-1):
                if t[p[1]][i]==6:break
                t[p[1]][i]=-1
            m=min(m,sum([k.count(0) for k in t]))
        elif p[-1]==3:
            t = [i.copy() for i in li]
            for i in range(p[2] + 1, b):
                if t[p[1]][i] == 6: break
                t[p[1]][i] = -1
            for i in range(p[1] + 1, a):
                if t[i][p[2]] == 6: break
                t[i][p[2]] = -1
            m=min(m,sum([k.count(0) for k in t]))
            t = [i.copy() for i in li]
            for i in range(p[1] + 1, a):
                if t[i][p[2]] == 6: break
                t[i][p[2]] = -1
            for i in range(p[2]-1,-1,-1):
                if t[p[1]][i]==6:break
                t[p[1]][i]=-1
            m=min(m,sum([k.count(0) for k in t]))
            t = [i.copy() for i in li]
            for i in range(p[2]-1,-1,-1):
                if t[p[1]][i]==6:break
                t[p[1]][i]=-1
            for i in range(p[1]-1,-1,-1):
                if t[i][p[2]]==6:break
                t[i][p[2]]=-1
            m=min(m,sum([k.count(0) for k in t]))
            t = [i.copy() for i in li]
            for i in range(p[1]-1,-1,-1):
                if t[i][p[2]]==6:break
                t[i][p[2]]=-1
            for i in range(p[2] + 1, b):
                if t[p[1]][i] == 6: break
                t[p[1]][i] = -1
            m=min(m,sum([k.count(0) for k in t]))
        elif p[-1]==4:
            t = [i.copy() for i in li]
            for i in range(p[1]-1,-1,-1):
                if t[i][p[2]]==6:break
                t[i][p[2]]=-1
            for i in range(p[2] + 1, b):
                if t[p[1]][i] == 6: break
                t[p[1]][i] = -1
            for i in range(p[1] + 1, a):
                if t[i][p[2]] == 6: break
                t[i][p[2]] = -1
            m=min(m,sum([k.count(0) for k in t]))
            t = [i.copy() for i in li]
            for i in range(p[2] + 1, b):
                if t[p[1]][i] == 6: break
                t[p[1]][i] = -1
            for i in range(p[1] + 1, a):
                if t[i][p[2]] == 6: break
                t[i][p[2]] = -1
            for i in range(p[2]-1,-1,-1):
                if t[p[1]][i]==6:break
                t[p[1]][i]=-1
            m=min(m,sum([k.count(0) for k in t]))
            t = [i.copy() for i in li]
            for i in range(p[1] + 1, a):
                if t[i][p[2]] == 6: break
                t[i][p[2]] = -1
            for i in range(p[2]-1,-1,-1):
                if t[p[1]][i]==6:break
                t[p[1]][i]=-1
            for i in range(p[1]-1,-1,-1):
                if t[i][p[2]]==6:break
                t[i][p[2]]=-1
            m=min(m,sum([k.count(0) for k in t]))
            t = [i.copy() for i in li]
            for i in range(p[2]-1,-1,-1):
                if t[p[1]][i]==6:break
                t[p[1]][i]=-1
            for i in range(p[1]-1,-1,-1):
                if t[i][p[2]]==6:break
                t[i][p[2]]=-1
            for i in range(p[2] + 1, b):
                if t[p[1]][i] == 6: break
                t[p[1]][i] = -1
            m=min(m,sum([k.count(0) for k in t]))
        elif p[-1]==5:
            t = [i.copy() for i in li]
            for i in range(p[2]-1,-1,-1):
                if t[p[1]][i]==6:break
                t[p[1]][i]=-1
            for i in range(p[1]-1,-1,-1):
                if t[i][p[2]]==6:break
                t[i][p[2]]=-1
            for i in range(p[2] + 1, b):
                if t[p[1]][i] == 6: break
                t[p[1]][i] = -1
            for i in range(p[1] + 1, a):
                if t[i][p[2]] == 6: break
                t[i][p[2]] = -1
            m=min(m,sum([k.count(0) for k in t]))
    else:
        if p[-1]==1:
            t=[i.copy() for i in li]
            for i in range(p[2]+1,b):
                if t[p[1]][i]==6:break
                t[p[1]][i]=-1
            dfs(t,deq[p[0]])
            t=[i.copy() for i in li]
            for i in range(p[2]-1,-1,-1):
                if t[p[1]][i]==6:break
                t[p[1]][i]=-1
            dfs(t,deq[p[0]])
            t=[i.copy() for i in li]
            for i in range(p[1]+1,a):
                if t[i][p[2]]==6:break
                t[i][p[2]]=-1
            dfs(t,deq[p[0]])
            t=[i.copy() for i in li]
            for i in range(p[1]-1,-1,-1):
                if t[i][p[2]]==6:break
                t[i][p[2]]=-1
            dfs(t,deq[p[0]])
        elif p[-1]==2:
            t=[i.copy() for i in li]
            for i in range(p[1]-1,-1,-1):
                if t[i][p[2]]==6:break
                t[i][p[2]]=-1
            for i in range(p[1]+1,a):
                if t[i][p[2]]==6:break
                t[i][p[2]]=-1
            dfs(t,deq[p[0]])
            t = [i.copy() for i in li]
            for i in range(p[2]+1,b):
                if t[p[1]][i]==6:break
                t[p[1]][i]=-1
            for i in range(p[2]-1,-1,-1):
                if t[p[1]][i]==6:break
                t[p[1]][i]=-1
            dfs(t,deq[p[0]])
        elif p[-1]==3:
            t = [i.copy() for i in li]
            for i in range(p[2] + 1, b):
                if t[p[1]][i] == 6: break
                t[p[1]][i] = -1
            for i in range(p[1] + 1, a):
                if t[i][p[2]] == 6: break
                t[i][p[2]] = -1
            dfs(t, deq[p[0]])
            t = [i.copy() for i in li]
            for i in range(p[1] + 1, a):
                if t[i][p[2]] == 6: break
                t[i][p[2]] = -1
            for i in range(p[2]-1,-1,-1):
                if t[p[1]][i]==6:break
                t[p[1]][i]=-1
            dfs(t,deq[p[0]])
            t = [i.copy() for i in li]
            for i in range(p[2]-1,-1,-1):
                if t[p[1]][i]==6:break
                t[p[1]][i]=-1
            for i in range(p[1]-1,-1,-1):
                if t[i][p[2]]==6:break
                t[i][p[2]]=-1
            dfs(t, deq[p[0]])
            t = [i.copy() for i in li]
            for i in range(p[1]-1,-1,-1):
                if t[i][p[2]]==6:break
                t[i][p[2]]=-1
            for i in range(p[2] + 1, b):
                if t[p[1]][i] == 6: break
                t[p[1]][i] = -1
            dfs(t, deq[p[0]])
        elif p[-1]==4:
            t = [i.copy() for i in li]
            for i in range(p[1]-1,-1,-1):
                if t[i][p[2]]==6:break
                t[i][p[2]]=-1
            for i in range(p[2] + 1, b):
                if t[p[1]][i] == 6: break
                t[p[1]][i] = -1
            for i in range(p[1] + 1, a):
                if t[i][p[2]] == 6: break
                t[i][p[2]] = -1
            dfs(t, deq[p[0]])
            t = [i.copy() for i in li]
            for i in range(p[2] + 1, b):
                if t[p[1]][i] == 6: break
                t[p[1]][i] = -1
            for i in range(p[1] + 1, a):
                if t[i][p[2]] == 6: break
                t[i][p[2]] = -1
            for i in range(p[2]-1,-1,-1):
                if t[p[1]][i]==6:break
                t[p[1]][i]=-1
            dfs(t, deq[p[0]])
            t = [i.copy() for i in li]
            for i in range(p[1] + 1, a):
                if t[i][p[2]] == 6: break
                t[i][p[2]] = -1
            for i in range(p[2]-1,-1,-1):
                if t[p[1]][i]==6:break
                t[p[1]][i]=-1
            for i in range(p[1]-1,-1,-1):
                if t[i][p[2]]==6:break
                t[i][p[2]]=-1
            dfs(t, deq[p[0]])
            t = [i.copy() for i in li]
            for i in range(p[2]-1,-1,-1):
                if t[p[1]][i]==6:break
                t[p[1]][i]=-1
            for i in range(p[1]-1,-1,-1):
                if t[i][p[2]]==6:break
                t[i][p[2]]=-1
            for i in range(p[2] + 1, b):
                if t[p[1]][i] == 6: break
                t[p[1]][i] = -1
            dfs(t, deq[p[0]])
        elif p[-1]==5:
            t = [i.copy() for i in li]
            for i in range(p[2]-1,-1,-1):
                if t[p[1]][i]==6:break
                t[p[1]][i]=-1
            for i in range(p[1]-1,-1,-1):
                if t[i][p[2]]==6:break
                t[i][p[2]]=-1
            for i in range(p[2] + 1, b):
                if t[p[1]][i] == 6: break
                t[p[1]][i] = -1
            for i in range(p[1] + 1, a):
                if t[i][p[2]] == 6: break
                t[i][p[2]] = -1
            dfs(t, deq[p[0]])
a,b=map(int,sys.stdin.readline().split())
li=[0]*a
deq=deque()
wall=deque()
w=0
m=float('inf')
n=1
for i in range(a):
    li[i]=list(map(int,sys.stdin.readline().split()))
    for j in range(b):
        if li[i][j]==6:
            wall.append((i,j))
            w+=1
        elif li[i][j]!=0:
            deq.append((n,i,j,li[i][j]))
            n+=1
n-=1
deq=list(deq)
if deq:
    dfs(li,deq[0])
    print(m)
else:
    print(a*b-w)
